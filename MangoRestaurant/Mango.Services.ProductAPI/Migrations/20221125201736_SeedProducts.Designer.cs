// <auto-generated />
using Mango.Services.ProductAPI.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mango.Services.ProductAPI.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20221125201736_SeedProducts")]
    partial class SeedProducts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mango.Services.ProductAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryName = "FastFood",
                            ImageUrl = "",
                            Name = "Burger",
                            Price = 100.0
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryName = "FastFood",
                            ImageUrl = "",
                            Name = "Pizza",
                            Price = 799.99000000000001
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryName = "FastFood",
                            ImageUrl = "",
                            Name = "Sandwich",
                            Price = 1110.0
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryName = "Appetizer",
                            ImageUrl = "",
                            Name = "Cake",
                            Price = 299.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
